{"version":3,"sources":["AppStyles.tsx","constants.ts","Header/HeaderStyles.tsx","imgs/index.ts","imgs/logo.svg","imgs/about.gif","imgs/conversationSearch.svg","imgs/conversationApp.svg","imgs/conversationAccess.svg","imgs/access.svg","imgs/appsIcon.png","imgs/securityBlock.svg","imgs/securityData.svg","imgs/technologyIcon.png","imgs/aboutOne.svg","imgs/aboutTwo.svg","imgs/aboutThree.svg","Header/Header.tsx","AboutApp/AboutAppStyles.tsx","AboutApp/AboutApp.tsx","СonversationsBlock/СonversationsBlockStyles.tsx","СonversationsBlock/СonversationsBlock.tsx","TeamViewer/TeamViewerStyles.tsx","TeamViewer/TeamViewer.tsx","AppsBlock/AppsBlockStyles.tsx","AppsBlock/AppsBlock.tsx","Security/SecurityStyles.tsx","Security/Security.tsx","TechnologyBlock/TechnologyStyles.tsx","TechnologyBlock/TechnologyBlock.tsx","Footer/FooterStyles.tsx","Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","mediaQueries","Logo","img","Link","a","Button","images","logo","about","conversationSearch","conversationApp","conversationAccess","access","appsIcon","securityBlock","securityData","technologyIcon","aboutOne","aboutTwo","aboutThree","Header","href","src","Text","Title","Description","Image","AboutApp","state","picture","getImageUrl","setInterval","newPicture","setState","this","React","PureComponent","Items","Item","ItemIcon","ItemText","ConversationsBlock","Icon","TeamViewer","AppsBlock","FakeItem","SecurityBlock","TechnologyBlock","ItemsTitle","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce67b8c1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;","export const mediaQueries = {\n  desktop: 1000,\n};","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 0 20px;\n  background: white;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 0 100px;\n    height: 100px;\n  }\n`;\n\nexport const Logo = styled.img`\n  width: 110px;\n  cursor: pointer;\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  color: blue;\n`;\n\nexport const Button = styled.div`\n  width: 120px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: blue;\n  font-size: 12px;\n  font-weight: bold;\n  cursor: pointer;\n  border-radius: 6px;\n  border: 2px solid blue;\n`;","import logo from './logo.svg';\nimport about from './about.gif';\nimport conversationSearch from './conversationSearch.svg';\nimport conversationApp from './conversationApp.svg';\nimport conversationAccess from './conversationAccess.svg';\nimport access from './access.svg';\nimport appsIcon from './appsIcon.png';\nimport securityBlock from './securityBlock.svg';\nimport securityData from './securityData.svg';\nimport technologyIcon from './technologyIcon.png';\nimport aboutOne from './aboutOne.svg';\nimport aboutTwo from './aboutTwo.svg';\nimport aboutThree from './aboutThree.svg';\n\nexport const images = {\n  logo,\n  about,\n  conversationSearch,\n  conversationApp,\n  conversationAccess,\n  access,\n  appsIcon,\n  securityBlock,\n  securityData,\n  technologyIcon,\n  aboutOne,\n  aboutTwo,\n  aboutThree,\n};","export default __webpack_public_path__ + \"static/media/logo.a70edd9e.svg\";","export default __webpack_public_path__ + \"static/media/about.25e8737a.gif\";","export default __webpack_public_path__ + \"static/media/conversationSearch.5548be96.svg\";","export default __webpack_public_path__ + \"static/media/conversationApp.e6992666.svg\";","export default __webpack_public_path__ + \"static/media/conversationAccess.29c03525.svg\";","export default __webpack_public_path__ + \"static/media/access.a85a3749.svg\";","export default __webpack_public_path__ + \"static/media/appsIcon.9b310f43.png\";","export default __webpack_public_path__ + \"static/media/securityBlock.eeb19dc4.svg\";","export default __webpack_public_path__ + \"static/media/securityData.b0440522.svg\";","export default __webpack_public_path__ + \"static/media/technologyIcon.92f233f1.png\";","export default __webpack_public_path__ + \"static/media/aboutOne.f24ec989.svg\";","export default __webpack_public_path__ + \"static/media/aboutTwo.3c3d7f71.svg\";","export default __webpack_public_path__ + \"static/media/aboutThree.e04cf1f5.svg\";","import React from 'react';\nimport {\n  Wrapper,\n  Logo,\n  Button,\n  Link,\n} from \"./HeaderStyles\";\nimport {images} from \"../imgs\";\n\nexport function Header() {\n  return (\n    <Wrapper>\n      <Link href=\"/\">\n        <Logo src={images.logo}/>\n      </Link>\n      <Link href=\"mailto:myscreensapp@gmail.com\">\n        <Button>Запросить демо</Button>\n      </Link>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 150px 20px 100px 20px;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100%;\n  overflow: hidden;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 300px 100px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.div``;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  margin: 50px 0 0 0;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 40%;\n    margin: 0 0 0 50px;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Image,\n  Title,\n  Description,\n} from \"./AboutAppStyles\";\nimport {images} from \"../imgs\";\n\nconst INTERVAL = 4000;\n\nexport class AboutApp extends React.PureComponent {\n  state = {\n    picture: 0,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n        const {picture} = this.state;\n        const newPicture = picture === 2 ? 0 : picture + 1;\n        this.setState({picture: newPicture});\n      }, INTERVAL);\n  }\n\n  private getImageUrl = (picture: number) => {\n    switch (picture) {\n      case 1:\n        return images.aboutTwo;\n      case 2:\n        return images.aboutThree;\n      default:\n        return images.aboutOne;\n    }\n  };\n\n\n  render() {\n    const {picture} = this.state;\n\n    return (\n      <Wrapper>\n        <Text>\n          <Title>Мгновенно узнавайте что видят ваши пользователи</Title>\n          <Description>\n            Вашим пользователям нужна помощь, но вы не видите их действий на веб сайте. Screens позволяет вам видеть экран клиента и управлять им без каких-либо настроек. Сделайте поддержку своих клиентов проще, быстрее и эффективнее.\n          </Description>\n        </Text>\n        <Image\n          src={this.getImageUrl(picture)}\n        />\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 80px 20px;\n  width: 100%;\n  background-color: rgba(0, 0 , 255, 0.2);\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 150px 100px;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    text-align: center;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Items = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 20px 0 0 0;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: 50px 20px 0 20px;\n  }\n`;\n\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-bottom: 50px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 25%;\n    padding-bottom: 0;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ItemIcon = styled.img`\n`;\n\nexport const ItemText = styled.div`\n  font-size: 14px;\n  color: rgba(0,0,0,1);\n  line-height: 20px;\n  font-weight: bold;\n  padding-top: 10px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    text-align: center;\n    padding-top: 20px;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Title,\n  Description,\n  Item,\n  ItemIcon,\n  ItemText,\n  Items,\n} from \"./СonversationsBlockStyles\";\nimport {images} from \"../imgs\";\n\nexport function ConversationsBlock() {\n  return (\n    <Wrapper>\n      <Text>\n        <Title>Упростите работу службы поддержки</Title>\n        <Description>\n          Смотрите что ваши пользователи видят на своих экранах в реальном времени.<br/>\n          Никаких загрузок или настроек не требуется.\n        </Description>\n      </Text>\n      <Items>\n        <Item>\n          <ItemIcon src={images.conversationSearch}/>\n          <ItemText>Найдите сессию вашего клиента в приложении Screens</ItemText>\n        </Item>\n        <Item>\n          <ItemIcon src={images.conversationApp}/>\n          <ItemText>Управляйте приложением клиентов в режиме реального времени</ItemText>\n        </Item>\n        <Item>\n          <ItemIcon src={images.conversationAccess}/>\n          <ItemText>Вся настройка доступа в одной кнопке</ItemText>\n        </Item>\n      </Items>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 80px 20px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 150px 100px;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 60%;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Icon = styled.img`\n  width: 70%;\n  margin: 40px 0 0 0;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 25%;\n    margin: 0 0 0 50px;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Title,\n  Description,\n  Icon,\n} from \"./TeamViewerStyles\";\nimport {images} from \"../imgs\";\n\nexport function TeamViewer() {\n  return (\n    <Wrapper>\n      <Text>\n        <Title>Вам больше не нужно просить клиентов устанавливать TeamViewer</Title>\n        <Description>\n          Всё управление экраном пользователя осуществляется через одну кнопку.<br/>\n          Вы можете мгновенно приступить к поддержке клиента, не тратя время на установку дополнительного ПО.\n        </Description>\n      </Text>\n      <Icon src={images.access}/>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 80px 20px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 150px 100px;\n  }\n`;\n\nexport const Text = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Icon = styled.img`\n  width: 80%;\n  margin-top: 50px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 30%;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Title,\n  Description,\n  Icon,\n} from \"./AppsBlockStyles\";\nimport {images} from \"../imgs\";\n\nexport function AppsBlock() {\n  return (\n    <Wrapper>\n      <Text>\n        <Title>Screens дополняет ваши сервисы</Title>\n        <Description>\n          Переходите к сессиям прямо из чата или телефонного разговора<br/> и сокращайте время разрешения на 54%\n        </Description>\n      </Text>\n      <Icon src={images.appsIcon}/>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 80px 20px;\n  background-color: rgba(0,255,0,0.2);\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 150px 100px;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    text-align: center;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Items = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px 0 0 0;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 50px 20px 0 20px;\n  }\n`;\n\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 30px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    width: 25%;\n    padding-bottom: 0;\n  }\n`;\n\nexport const FakeItem = styled.div`\n  width: 30px;\n`;\n\nexport const ItemIcon = styled.img`\n`;\n\nexport const ItemText = styled.div`\n  font-size: 14px;\n  color: rgba(0,0,0,1);\n  line-height: 20px;\n  font-weight: bold;\n  \n @media screen and (min-width: ${mediaQueries.desktop}px) {\n    text-align: center;\n    padding-top: 20px;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Title,\n  Description,\n  Item,\n  ItemIcon,\n  ItemText,\n  Items,\n  FakeItem,\n} from \"./SecurityStyles\";\nimport {images} from \"../imgs\";\n\nexport function SecurityBlock() {\n  return (\n    <Wrapper>\n      <Text>\n        <Title>Безопасность</Title>\n        <Description>\n          Screens важно защитить персональные данные ваших клиентов\n        </Description>\n      </Text>\n      <Items>\n        <Item>\n          <ItemIcon src={images.securityBlock}/>\n          <ItemText>Скройте конфиденциальную информацию пользователей от сотрудников службы поддержки</ItemText>\n        </Item>\n        <FakeItem/>\n        <Item>\n          <ItemIcon src={images.securityData}/>\n          <ItemText>Данные о клиентах отправляются только во время открытых сессий</ItemText>\n        </Item>\n      </Items>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 80px 20px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 150px 100px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.div``;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-weight: bold;\n  padding-bottom: 20px;\n  line-height: 40px;\n`;\n\nexport const Description = styled.div`\n  font-size: 20px;\n  color: rgba(0,0,0,0.6);\n  line-height: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 80%;\n  padding-top: 30px;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding-top: 0;\n    width: 35%;\n  }\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Text,\n  Image,\n  Title,\n  Description,\n} from \"./TechnologyStyles\";\nimport {images} from \"../imgs\";\n\nexport function TechnologyBlock() {\n  return (\n    <Wrapper>\n      <Text>\n        <Title>Работает со всем</Title>\n        <Description>\n          Screens работает на всех устройствах.<br/> Поддерживает старые и новые технологии.\n        </Description>\n      </Text>\n      <Image\n        src={images.technologyIcon}\n      />\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {mediaQueries} from \"../constants\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 230px;\n  background-color: blue;\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  position: relative;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 0 100px;\n    height: 150px;\n    flex-direction: row;\n  }\n`;\n\nexport const Items = styled.div`\n  padding: 30px 30px 0 0;\n  \n  @media screen and (min-width: ${mediaQueries.desktop}px) {\n    padding: 30px 50px 0 0;\n  }\n`;\n\nexport const ItemsTitle = styled.div`\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n  padding-bottom: 5px;\n  user-select: none;\n`;\n\nexport const Item = styled.div`\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 14px;\n  padding: 5px 0;\n  cursor: pointer;\n`;","import React from 'react';\nimport {\n  Wrapper,\n  Items,\n  ItemsTitle,\n  Item,\n} from \"./FooterStyles\";\n\nexport function Footer() {\n  return (\n    <Wrapper>\n      <Items>\n        <ItemsTitle>Документы</ItemsTitle>\n        <Item>Политика конфиденциальности</Item>\n        <Item>Условия пользования сайтом</Item>\n      </Items>\n      <Items>\n        <ItemsTitle>Контакты</ItemsTitle>\n        <Item>myscreensapp@gmail.com</Item>\n      </Items>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport {Wrapper} from \"./AppStyles\";\nimport {Header} from \"./Header/Header\";\nimport {AboutApp} from \"./AboutApp/AboutApp\";\nimport {ConversationsBlock} from \"./СonversationsBlock/СonversationsBlock\";\nimport {TeamViewer} from \"./TeamViewer/TeamViewer\";\nimport {AppsBlock} from \"./AppsBlock/AppsBlock\";\nimport {SecurityBlock} from \"./Security/Security\";\nimport {TechnologyBlock} from \"./TechnologyBlock/TechnologyBlock\";\nimport {Footer} from \"./Footer/Footer\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header/>\n      <AboutApp/>\n      <ConversationsBlock/>\n      <AppsBlock/>\n      <TeamViewer/>\n      <SecurityBlock/>\n      <TechnologyBlock/>\n      <Footer/>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}